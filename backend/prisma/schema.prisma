generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Client {
  id          BigInt    @id
  name        String
  cpf         String    @unique
  address     String
  email       String?   @unique
  phoneNumber String?
  event       Event[]
  payments    Payment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("clientes")
}

model Buffet {
  id                 BigInt                @id
  name               String
  description        String
  active             Boolean               @default(true)
  events             Event[]
  eventId            BigInt?
  durations          DurationsOnBuffets[]
  durationId         BigInt?
  guestsQtts         GuestsQttsOnBuffets[]
  guestsQttId        BigInt?

  @@map("buffets")
}

model Duration {
  id       BigInt                   @id
  duration Int
  active   Boolean                  @default(true)
  buffets  DurationsOnBuffets[]
  buffetId BigInt?

  @@map("duracoes")
}

model GuestsQtt {
  id                 BigInt                  @id
  guestsQtt          Int
  price              Float
  active             Boolean                 @default(true)
  buffets            GuestsQttsOnBuffets[]
  buffetId           BigInt?

  @@map("qtds_convidados")
}

model DurationsOnBuffets {
  buffet     Buffet            @relation(fields: [buffetId], references: [id])
  buffetId   BigInt
  duration   Duration          @relation(fields: [durationId], references: [id])
  durationId BigInt

  @@id([buffetId, durationId])
  @@map("juncao_buffet_duracao")
}

model GuestsQttsOnBuffets{
  buffet      Buffet             @relation(fields: [buffetId], references: [id])
  buffetId    BigInt
  guestsQtt   GuestsQtt          @relation(fields: [guestsQttId], references: [id])
  guestsQttId BigInt

  @@id([buffetId, guestsQttId])
  @@map("juncao_buffet_convidados")
}

model Optional {
  id          BigInt               @id
  name        String
  description String
  qtt         Int
  active      Boolean              @default(true)
  types       TypesOnOptionals[]
  events      OptionalsOnEvents[]

  @@map("opcionais")
}

model Type {
  id         BigInt                @id
  type       String
  price      Float
  qtt        Int
  active     Boolean               @default(true)
  optional   TypesOnOptionals[]

  @@map("tipos_para_opcionais")
}

model TypesOnOptionals {
  type       Type                      @relation(fields: [typeId], references: [id])
  typeId     BigInt
  optional   Optional                  @relation(fields: [optionalId], references: [id])
  optionalId BigInt

  @@id([typeId, optionalId])
  @@map("juncao_opcional_tipo")
}

model Event {
  id             BigInt                @id
  status         String
  evaluation     Int?
  type           String?
  birthdayPerson String?
  date           DateTime
  startTime      DateTime?
  address        String?
  partyTheme     String?
  responsible    String?
  structure      String?
  contract       String?
  obs            String?
  client         Client              @relation(fields: [clientId], references: [id])
  clientId       BigInt
  buffet         Buffet              @relation(fields: [buffetId], references: [id])
  buffetId       BigInt
  optionals      OptionalsOnEvents[]
  payments       Payment[]
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt

  @@map("eventos")
}

model OptionalsOnEvents {
  event      Event            @relation(fields: [eventId], references: [id])
  eventId    BigInt
  optional   Optional         @relation(fields: [optionalId], references: [id])
  optionalId BigInt

  @@id([eventId, optionalId])
  @@map("evento_opcional")
}

model Payment {
  id        BigInt   @id
  client    Client   @relation(fields: [clientId], references: [id])
  clientId  BigInt
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   BigInt
  date      DateTime
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("pagamentos")
}
