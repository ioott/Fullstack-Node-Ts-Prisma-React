generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Client {
  id          Int       @id @default(autoincrement())
  name        String
  cpf         String    @unique
  adress      String
  email       String?   @unique
  phoneNumber String?
  event       Event[]
  payments    Payment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("clientes")
}

model Buffet {
  id               Int                    @id @default(autoincrement())
  name             String
  description      String
  event            Event[]
  duration         BuffetDuration[]
  durationId       Int
  guestsQtt        BuffetGuestsQuantity[]
  guestsQttId      Int
  GuestsQuantity   GuestsQuantity?        @relation(fields: [guestsQuantityId], references: [id])
  guestsQuantityId Int?

  @@map("buffets")
}

model Duration {
  id       Int              @id @default(autoincrement())
  duration Int
  buffets  BuffetDuration[]

  @@map("duracoes")
}

model GuestsQuantity {
  id                   Int                   @id @default(autoincrement())
  guestsQtt            Int
  price                Float
  buffets              Buffet[]
  BuffetGuestsQuantity BuffetGuestsQuantity?

  @@map("qtd_convidados")
}

model BuffetDuration {
  buffet     Buffet   @relation(fields: [buffetId], references: [id])
  buffetId   Int      @unique
  duration   Duration @relation(fields: [durationId], references: [id])
  durationId Int      @unique

  @@id([buffetId, durationId])
  @@map("buffet_duracao")
}

model BuffetGuestsQuantity {
  buffet      Buffet         @relation(fields: [buffetId], references: [id])
  buffetId    Int            @unique
  guestsQtt   GuestsQuantity @relation(fields: [guestsQttId], references: [id])
  guestsQttId Int            @unique

  @@id([buffetId, guestsQttId])
  @@map("buffet_qtdConvidados")
}

model Optional {
  id          Int                   @id @default(autoincrement())
  name        String
  description String
  qtt         Int
  type        OptionalOptionalType?
  typeId      Int
  event       EventOptional?
  eventId     Int

  @@map("opcionais")
}

model OptionalType {
  id       Int                   @id @default(autoincrement())
  type     String
  price    Float
  qtt      Int
  optional OptionalOptionalType?

  @@map("opcionais_tipos")
}

model OptionalOptionalType {
  type       OptionalType @relation(fields: [typeId], references: [id])
  typeId     Int          @unique
  optional   Optional     @relation(fields: [optionalId], references: [id])
  optionalId Int          @unique

  @@id([typeId, optionalId])
  @@map("opcional_opcionalTipo")
}

model Event {
  id             Int            @id @default(autoincrement())
  type           String
  birthdayPerson String?
  date           DateTime
  startTime      DateTime
  adress         String
  partyTheme     String?
  responsible    String?
  structure      String?
  contract       String?
  obs            String?
  client         Client         @relation(fields: [clientId], references: [id])
  clientId       Int
  buffet         Buffet         @relation(fields: [buffetId], references: [id])
  buffetId       Int
  optional       EventOptional?
  optionalId     Int
  payments       Payment[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  @@map("eventos")
}

model EventOptional {
  event      Event    @relation(fields: [eventId], references: [id])
  eventId    Int      @unique
  optional   Optional @relation(fields: [optionalId], references: [id])
  optionalId Int      @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@id([eventId, optionalId])
  @@map("evento_opcional")
}

model Payment {
  id        Int      @id @default(autoincrement())
  client    Client   @relation(fields: [clientId], references: [id])
  clientId  Int
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   Int
  date      DateTime
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("pagamentos")
}
